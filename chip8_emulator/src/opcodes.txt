
    Opcode	Explanation
    0NNN	Calls RCA 1802 program at address NNN.
[X] 00E0	Clears the screen.
[X] 00EE	Returns from a subroutine.
[X] 1NNN	Jumps to address NNN.
[X] 2NNN	Calls subroutine at NNN.
[X] 3XNN	Skips the next instruction if VX equals NN.
[X] 4XNN	Skips the next instruction if VX doesn't equal NN.
[X] 5XY0	Skips the next instruction if VX equals VY.
[X] 6XNN	Sets VX to NN.
[X] 7XNN	Adds NN to VX.
[X] 8XY0	Sets VX to the value of VY.
[X] 8XY1	Sets VX to VX or VY.
[X] 8XY2	Sets VX to VX and VY.
[X] 8XY3	Sets VX to VX xor VY.
[X] 8XY4	Adds VY to VX. VF is set to 1 when there's a carry, and to 0 when there isn't.
[X] 8XY5	VY is subtracted from VX. VF is set to 0 when there's a borrow, and 1 when there isn't.
[X] 8XY6	Shifts VX right by one. VF is set to the value of the least significant bit of VX before the shift.[2]
[X] 8XY7	Sets VX to VY minus VX. VF is set to 0 when there's a borrow, and 1 when there isn't.
[X] 8XYE	Shifts VX left by one. VF is set to the value of the most significant bit of VX before the shift.[2]
[X] 9XY0	Skips the next instruction if VX doesn't equal VY.
[X] ANNN	Sets I to the address NNN.
[X] BNNN	Jumps to the address NNN plus V0.
[X] CXNN	Sets VX to a random number and NN.
[X] DXYN	Draws a sprite at coordinate (VX, VY) that has a width of 8 pixels and a height of N pixels. Each row of 8 pixels is read as bit-coded (with the most significant bit of each byte displayed on the left) starting from memory location I; I value doesn't change after the execution of this instruction. As described above, VF is set to 1 if any screen pixels are flipped from set to unset when the sprite is drawn, and to 0 if that doesn't happen.
[X] EX9E	Skips the next instruction if the key stored in VX is pressed.
[X] EXA1	Skips the next instruction if the key stored in VX isn't pressed.
[X] FX07	Sets VX to the value of the delay timer.
[X] FX0A	A key press is awaited, and then stored in VX.
[X] FX15	Sets the delay timer to VX.
[X] FX18	Sets the sound timer to VX.
[X] FX1E	Adds VX to I.
[X] FX29	Sets I to the location of the sprite for the character in VX. Characters 0-F (in hexadecimal) are represented by a 4x5 font.
[X] FX33	Stores the Binary-coded decimal representation of VX, with the most significant of three digits at the address in I,
            the middle digit at I plus 1, and the least significant digit at I plus 2.
            (In other words, take the decimal representation of VX, place the hundreds digit in memory at location in I,
            the tens digit at location I+1, and the ones digit at location I+2.)
[X] FX55	Stores V0 to VX in memory starting at address I.
[X] FX65	Fills V0 to VX with values from memory starting at address I.